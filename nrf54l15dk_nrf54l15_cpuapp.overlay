// To get started, press Ctrl+Space (or Option+Esc) to bring up the completion menu and view the available nodes.

// You can also use the buttons in the sidebar to perform actions on nodes.
// Actions currently available include:

// * Enabling / disabling the node
// * Adding the bus to a bus
// * Removing the node
// * Connecting ADC channels

// For more help, browse the DeviceTree documentation at https://docs.zephyrproject.org/latest/guides/dts/index.html
// You can also visit the nRF DeviceTree extension documentation at https://docs.nordicsemi.com/bundle/nrf-connect-vscode/page/guides/ncs_configure_app.html#devicetree-support-in-the-extension

// Disable NFC to use NFC pins as GPIOs
&nfct {
    status = "disabled";
};
&uicr {
    nfct-pins-as-gpios;
};
// Disable UART to use UART pins as GPIOs
&uart20 {
    status = "disabled";
};

&led0 {
    status = "disabled";
};
&led1 {
    status = "disabled";
};
&led2 {
    status = "disabled";
};
&button0 {
    status = "disabled";
};
&button1 {
    status = "disabled";
};
&button2 {
    status = "disabled";
};
&button3 {
    status = "disabled";
};
&pwm20 {
    status = "disabled";
};


&spi00 {
    status = "disabled";
};


/*&clock {
    //hfclkaudio-frequency = <12288000>;  // Exemple : 12.288 MHz â†’ 48 kHz multiples 
    // 11289600
};*/

// Redirect logs (printk) to UART 30
&uart30 {
    status = "okay";
    current-speed = <115200>;
    pinctrl-0 = <&uart30_default>;
    pinctrl-1 = <&uart30_sleep>;
    pinctrl-names = "default", "sleep";
};
&{/chosen} {
    zephyr,console = &uart30;
    zephyr,shell-uart = &uart30;
    zephyr,uart-mcumgr = &uart30;
};

&i2s20 {
    status = "okay";
    label = "i2s0_mic";
    compatible = "nordic,nrf-i2s";
    pinctrl-0 = <&i2s0_default>;
    pinctrl-names = "default";

    clock-source = "PCLK32M_HFXO";  // High-accuracy 32 MHz clock
};

&pinctrl {
    i2s0_default: i2s0_default {
        group1 {
            psels = <NRF_PSEL(I2S_SCK_M, 1, 11)>,  // MIC_CLK (SCK - Serial Clock)
                    <NRF_PSEL(I2S_LRCK_M, 1, 12)>, // MIC_WS
                    <NRF_PSEL(I2S_SDIN, 1, 13)>; // MIC_DATA
        };
    };
};

/* Microphone Control GPIOs */
/*
&gpio2 {
    status = "okay";
    
    mic_wake: mic_wake {
        status = "okay";
        compatible = "nordic,gpio-pins";
        gpios = <&gpio2 5 GPIO_ACTIVE_HIGH>; // MIC_WAKE
    };

    mic_thsel: mic_thsel {
        status = "okay";
        compatible = "nordic,gpio-pins";
        gpios = <&gpio2 7 GPIO_ACTIVE_HIGH>;  // MIC_THSEL
    };

    mic_oe: mic_oe {
        status = "okay";
        compatible = "nordic,gpio-pins";
        gpios = <&gpio2 10 GPIO_ACTIVE_HIGH>; // MIC_OE
    };
};*/

&gpio2 {
    status = "okay";
};

&gpio1 {
    status = "okay";
};

/ {
    mic_gpio: mic_gpio {
        compatible = "gpio-leds";

        mic_wake: mic_wake {
            gpios = <&gpio1 8 GPIO_ACTIVE_HIGH>;
            label = "MIC_WAKE";
        };

        mic_thsel: mic_thsel {
            gpios = <&gpio1 9 GPIO_ACTIVE_HIGH>;
            label = "MIC_THSEL";
        };

        mic_oe: mic_oe {
            gpios = <&gpio1 10 GPIO_ACTIVE_HIGH>;
            label = "MIC_OE";
        };
        
        /*test_data: test_data {
            gpios = <&gpio2 9 GPIO_ACTIVE_HIGH>; // P2.09 = MIC_DATA
            label = "TEST_DATA";
        };*/
    };
};
